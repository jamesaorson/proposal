-- ground.script
-- Store the ids of the ground game objects in a Lua table so we can iterate over them.
local pieces = { 
	"ground0",
	"ground1", 
	"ground2", 
	"ground3",
    "ground4", 
	"ground5", 
	"ground6"
} 

local GROUND_WIDTH = 228
local OFF_SCREEN_LEFT = -GROUND_WIDTH
local RIGHT_OF_GROUND = GROUND_WIDTH * (table.getn(pieces) - 1)

-- The init() function is called when the game object comes to life in the game. We initiate a object local member variable that contains the velocity of the ground.
function init(self)
	
end

-- update() is called once each frame, typically 60 times per second. dt contains the number of seconds since the last call.
function update(self, timeSinceLastCall) 
	-- Iterate over all the ground game objects.
    for i, piece in ipairs(pieces) do 
        local position = go.get_position(piece)
        
        if position.x <= OFF_SCREEN_LEFT then -- Store the current position in a local variable, then if the current object is on the leftmost edge, move it to the rightmost edge.
            position.x = RIGHT_OF_GROUND + (position.x + GROUND_WIDTH)
        end
        
		position.x = position.x - self.velocity * timeSinceLastCall -- Decrease the current X-position with the set velocity. Multiply with dt to get framerate independent velocity in pixels/s.
        go.set_position(position, piece) -- Update the objectâ€™s position with the new velocity.
    end
    
    self.velocity = self.velocity + 0.1
end

function on_message(self, message_id, message, sender)
    if message_id == hash("set_velocity") then 
    	self.velocity = message.velocity 
    end
end