local DEFAULT_VELOCITY = 450
local GRID = 500
local PLATFORM_HEIGHTS = { 100, 200, 350 } 
local NUM_COINS = 3

go.property("velocity", 450)

function init(self)
    msg.post("ground/controller#script", "set_velocity", { velocity = self.velocity })
    self.gridw = 0
    -- Use a table to store all spawned platforms
    self.platforms = {}
    self.coinsCollected = 0
end

function update(self, timeSinceLastCall)
	if self.game_mode ~= GAME_MODES[1] then
	    self.gridw = self.gridw + self.velocity * timeSinceLastCall

	    if self.gridw >= GRID then
	        self.gridw = 0

	        -- Maybe spawn a platform at random height
			if math.random() > 0.2 then
				print('create ' .. self.game_mode)
	            local height = PLATFORM_HEIGHTS[math.random(#PLATFORM_HEIGHTS)]
				local url = "#platform_factory"
	            
	            local num_coins = NUM_COINS
				if math.random() > 0.5 then
	                url = "#platform_long_factory"
	                num_coins = num_coins * 2
	            end
	            
	            local position = vmath.vector3(1600, height, 0)
	            local rotation = nil
	            local properties = {}
	            local scale = 0.6

	            local platform = factory.create(url, position, rotation, properties, scale)
	            
	            msg.post(platform, "set_velocity", { velocity = self.velocity })
	            msg.post(platform, "create_coins", { coins = num_coins })
	            
	            table.insert(self.platforms, platform)
	        end
		end
	end
end

function on_message(self, message_id, message, sender)
	-- The “reset” message deletes all platforms stored in the table
    if message_id == hash("reset") then 
        -- Tell the hero to reset.
        msg.post("hero#script", "reset")
        
		-- Delete all platforms
        for i, platform in ipairs(self.platforms) do
            go.delete(platform)
        end
        
        self.platforms = {}
        
        self.coinsCollected = 0
    	label.set_text("score#score", 0)
		    	
		self.velocity = DEFAULT_VELOCITY
    	
    	msg.post("ground/controller#script", "set_velocity", { velocity = self.velocity })
    	msg.post("background/controller#script", "reset")
    elseif message_id == hash("delete_spawn") then -- The “delete_spawn” message deletes a particular platform and removes it from the table
        for i, platform in ipairs(self.platforms) do
            if platform == message.id then
                table.remove(self.platforms, i)
                go.delete(platform)
            end
        end
    elseif message_id == hash("coin_collection") then
    	self.coinsCollected = self.coinsCollected + 1
		label.set_text("score#score", self.coinsCollected)
	elseif message_id == hash("set_game_mode") then
		self.game_mode = message.game_mode
	end
end