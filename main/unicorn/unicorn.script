local ENDING_X_POSITION = 750

function init(self)
    self.position = go.get_position()
	self.originalXPosition = self.position.x
	self.velocity = vmath.vector3(0, 0, 0)
    msg.post("#", "reset")
end

function final(self)
end

local function play_animation(self, animation)
    -- Only play animations which are not already playing
    if self.animation ~= animation then
        -- Tell the spine model to play the animation
        spine.play("#spinemodel", animation, go.PLAYBACK_LOOP_FORWARD, 0.15)
        -- Remember which animation is playing
        self.animation = animation
    end
end

local function update_animation(self)
    -- make sure the right animation is playing
    if self.ground_contact then
        play_animation(self, hash("run_left"))
    else
        if self.velocity.y > 0 then
            play_animation(self, hash("jump_left"))
        else
            play_animation(self, hash("fall_left"))
        end
    end
end

function update(self, timeSinceLastCall)        
	if self.game_mode == UNICORN_RUN or self.game_mode == ENDING_SETUP then
		if self.game_mode == UNICORN_RUN then
			self.velocity.x = self.velocity.x + 19
		elseif self.game_mode == ENDING_SETUP then
			play_animation(self, hash("idle_right"))
			
			if go.get_position().x < ENDING_X_POSITION then
				self.velocity.x = 0
			else
				self.velocity.x = -450
			end
		end
		-- Apply velocity to the player character
		go.set_position(go.get_position() + self.velocity * timeSinceLastCall)

		update_animation(self)

		if self.originalXPosition - 15 > self.position.x then
			msg.post("controller#script", "reset")
		end

		-- Reset volatile state
		self.correction = vmath.vector3()
		self.ground_contact = false
	elseif self.game_mode == PLAY then
	end
end

function on_message(self, message_id, message, sender)
    if message_id == hash("reset") then
        self.velocity = vmath.vector3(0, 0, 0)
        self.correction = vmath.vector3()
        self.ground_contact = false
		play_animation(self, hash("idle_right"))
        
        go.set(".", "euler.z", 0)
        go.set_position(self.position)
	elseif message_id == hash("set_game_mode") then
		self.game_mode = message.game_mode
	elseif message_id == hash("set_animation") then
		play_animation(self, message.animation)
    end
end